%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: code_coverage_exercise.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: Times-Bold Times-Roman Courier
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -P leger -t a4 -o
%+ code_coverage_exercise.ps code_coverage_exercise.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2011.10.14:1904
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
TeXDict begin 39139632 55387786 1000 600 600
(code_coverage_exercise.dvi) @start /Fa 135[55 1[55 55
55 55 4[55 55 3[55 3[55 5[55 48[55 46[{TeXBase1Encoding ReEncodeFont}11
90.9091 /Courier rf /Fb 107[40 40 24[40 45 45 66 45 45
25 35 30 1[45 45 45 71 25 45 25 25 45 45 30 40 45 40
45 40 7[66 1[86 1[66 56 51 61 1[51 66 66 81 56 66 1[30
66 66 51 56 66 61 61 66 13[45 45 45 2[23 30 23 2[30 30
2[76 3[30 30[51 2[{TeXBase1Encoding ReEncodeFont}59 90.9091
/Times-Roman rf /Fc 134[60 60 86 60 66 40 47 53 2[60
66 100 33 2[33 66 60 1[53 66 53 1[60 10[86 1[80 66 86
2[93 86 113 3[47 93 93 73 80 86 86 1[86 1[60 4[40 6[60
1[60 49[{TeXBase1Encoding ReEncodeFont}38 119.552 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -121 91 a Fc(DESIGN)30 b(VERIFICA)-11
b(TION)29 b(Exer)n(cise)h(3:)36 b(Ho)o(w)30 b(to)g(collect)g(Code)g(Co)
o(v)o(erage)f(with)1509 204 y(ModelSim)-9 456 y Fb(This)g(e)o(x)o
(ercise)h(introduces)i(you)e(to)f(the)g(Code)g(Co)o(v)o(erage)h(vie)n
(wer)g(of)f(ModelSim.)45 b(It)29 b(is)g(assumed)h(that)g(you)-9
569 y(ha)n(v)o(e)35 b(done)g(the)f(\223Introduction)k(to)c(the)h
(ModelSim)f(Simulator\224)h(e)o(x)o(ercise)h(and)e(hence)h(kno)n(w)f
(ho)n(w)g(to)g(run)-9 682 y(ModelSim)24 b(without)g(collecting)i(code)f
(co)o(v)o(erage.)-9 832 y(If)e(there)i(are)f(problems,)g(please)h(let)f
(me)f(kno)n(w)-6 b(.)28 b(Ha)n(v)o(e)c(fun!)2967 945
y(K)n(erstin)-236 1221 y Fc(Collecting)31 b(Code)f(Co)o(v)o(erage)f
(with)i(ModelSim)-123 1473 y Fb(1.)46 b(Set)31 b(up)g(your)h(w)o
(orking)h(library)g(as)e(usual.)53 b(Before)32 b(you)g(compile)g(your)g
(design,)j(e.g.)51 b(the)32 b Fa(mux_int_test.v)-9 1586
y Fb(testbench)c(from)c(the)i(pre)n(vious)h(e)o(x)o(ercise,)f(you)g
(must)f(enable)h(the)f(respecti)n(v)o(e)i(source)g(code)f(co)o(v)o
(erage)g(options)h(\(e.g.)-9 1699 y(Statement)g(Co)o(v)o(erage,)g
(Branch)g(Co)o(v)o(erage,)g(etc\))f(you)h(w)o(ant)f(to)g(collect)h
(during)h(simulation)g(from)e(the)g(\223Co)o(v)o(erage\224)-9
1812 y(tab)g(of)f(the)h(\223Compile)h(Options\224)g(menu)e(.)34
b(Co)o(v)o(erage)27 b(collection)h(must)e(also)g(be)g(enableded)i(at)d
(the)h(time)f(when)h(you)-9 1925 y(load)e(a)f(design)j(unit.)j(Then)23
b(complie)i(your)f(design)h(as)f(usual.)-9 2075 y(From)g(the)h
(\223Simulate\224)g(menu)g(select)h(\223Start)e(Simulation\224.)34
b(In)24 b(the)h(\223Start)g(Simulation\224)h(windo)n(w)e(select)i(the)f
(\223Oth-)-9 2188 y(ers\224)i(tab)f(and)h(tick)f(\223Enable)i(code)f
(co)o(v)o(erage\224.)38 b(\(Notice)27 b(that)g(you)f(can)h(also)g
(specify)g(the)g(name)f(of)g(the)h(dataset)g(\002le)-9
2301 y(for)f(storing)h(w)o(a)n(v)o(eforms)f(in)f(this)h(windo)n(w)-6
b(.\))35 b(Then)25 b(select)i(the)f(\223Design\224)g(tab,)g(select)h
(the)f(design)h(to)e(be)g(loaded)i(and)-9 2414 y(disable)e
(optimizations.)32 b(Se)n(v)o(eral)24 b(co)o(v)o(erage)h(statistics)h
(windo)n(ws)e(appear)-5 b(.)-9 2564 y(W)e(atch)24 b(the)g(console)h
(windo)n(w)e(for)h(the)g(command-line)i(instructions.)-123
2752 y(2.)46 b(Run)25 b(the)g(simulation)i(and)e(in)l(v)o(estigate)j
(the)d(code)h(co)o(v)o(erage)g(results.)35 b(\(Y)-10
b(ou)25 b(almost)g(certainly)j(will)c(ha)n(v)o(e)i(to)f(enlar)n(ge)-9
2865 y(the)36 b(\223sim\224)f(pane)i(\223\(Local)f(Co)o(v)o(erage)g
(Aggre)o(gation\)\224)i(to)d(see)h(all)f(results.\))66
b(Check)36 b(the)g(Statement)g(Count,)i(the)-9 2978 y(Statement)24
b(Hits,)f(Statement)i(\045,)d(Statement)i(Graph,)g(etc.)-9
3128 y(The)c(ModelSim)h(SE)e(User)i(Manual)g(\(a)n(v)n(ailable)i(in)e
(HTML)e(format)i(from)f(the)h(\223Help\224)h(menu)f(under)g(\223SE)f
(Documen-)-9 3241 y(tation\224\))27 b(contains)g(further)f(information)
h(on)e(collecting)j(code)d(co)o(v)o(erage)h(and)g(e)o(xplains)g(all)f
(the)g(co)o(v)o(erage)h(statistics)-9 3354 y(windo)n(ws,)f(ho)n(w)g(to)
g(sa)n(v)o(e)h(and)f(mer)n(ge)h(co)o(v)o(erage)h(results,)f(and)g
(other)g(interesting)i(features)f(of)e(the)h(co)o(v)o(erage)g(collec-)
-9 3467 y(tion)e(tool.)-123 3654 y(3.)46 b(Y)-10 b(ou)20
b(can)h(bro)n(wse)g(the)f(design)i(hierarchy)g(and)f(see)g(the)f(total)
i(code)f(co)o(v)o(erage)h(of)e(each)h(sub-unit)h(as)f(well)f(as)g(a)g
(detailed)-9 3767 y(analysis)26 b(of)d(which)h(lines)g(ha)n(v)o(e)h
(been)f(co)o(v)o(ered.)-236 4019 y Fc(Ho)o(w)30 b(well)g(ha)m(v)o(e)g
(y)m(ou)g(exer)n(cised)g(the)g(calc1)g(design?)-236 4196
y Fb(P)o(art)g(of)h(the)g(2nd)g(assignment)i(is)e(to)g(\002nd)f(out)i
(ho)n(w)e(well)g(the)i(test)f(suites)h(you)f(submitted)i(for)e(the)g
(\002rst)g(assignment,)k(for)-236 4309 y(which)24 b(the)g(calc1)g
(source)h(code)f(w)o(as)g(not)f(a)n(v)n(ailable,)j(e)o(x)o(ercised)f
(the)f(calc1)h(design.)-236 4461 y(The)e(source)h(code)g(of)f(calc1)i
(will)d(be)i(a)n(v)n(ailable)h(in)e(time)g(for)h(the)f(2nd)h
(assignment.)31 b(It)23 b(is)g(wise)g(to)g(run)g(your)h(tests)g(again)g
(and)-236 4574 y(to)j(measure)i(code)g(co)o(v)o(erage.)42
b(\(Y)-10 b(ou)28 b(might)g(just)g(\002nd)g(a)f(part)h(of)g(the)g
(calc1)g(design)h(which)g(you)f(ha)n(v)o(e)g(not)g(e)o(x)o(ercised,)i
(and)-236 4686 y(more)23 b(b)n(ugs)i(could)g(possibly)g(be)f(found)h
(there.\))p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
